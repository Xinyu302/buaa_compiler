.data
stringEnter:	.asciiz	"\n"
string0:	.asciiz	"now ret\\n "
.text
#global:
li	$t0,	2
sw	$t0,	0($gp)
li	$t0,	98
sw	$t0,	4($gp)
addi	$sp,	$sp,	-20
jal	main
j	PROGRAM_END
print:
sw	$ra,	0($sp)
lw	$a0,	4($sp)
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
lw	$a0,	8($sp)
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
lw	$t1,	4($sp)
lw	$t2,	4($sp)
mult	$t1,	$t2
mflo	$t0
sw	$t0,	12($sp)
lw	$t1,	8($sp)
lw	$t2,	8($sp)
mult	$t1,	$t2
mflo	$t0
sw	$t0,	16($sp)
lw	$t1,	12($sp)
lw	$t2,	16($sp)
addu	$t0,	$t1,	$t2
sw	$t0,	20($sp)
lw	$v0,	20($sp)
lw	$ra,	0($sp)
addi	$sp,	$sp,	24
jr	$ra
fib:
sw	$ra,	0($sp)
lw	$t0,	4($sp)
li	$t1,	0
bne	$t0,	$t1,	else_0
li	$v0,	1
lw	$ra,	0($sp)
addi	$sp,	$sp,	28
jr	$ra
j	else_end_0
else_0:
lw	$t0,	4($sp)
li	$t1,	1
bne	$t0,	$t1,	else_1
li	$v0,	1
lw	$ra,	0($sp)
addi	$sp,	$sp,	28
jr	$ra
else_1:
else_end_0:
lw	$t1,	4($sp)
addi	$t0,	$t1,	-1
sw	$t0,	12($sp)
lw	$t0,	12($sp)
sw	$t0,	-24($sp)
addi	$sp,	$sp,	-28
jal	fib
sw	$v0,	8($sp)
lw	$t1,	4($sp)
addi	$t0,	$t1,	-2
sw	$t0,	20($sp)
lw	$t0,	20($sp)
sw	$t0,	-24($sp)
addi	$sp,	$sp,	-28
jal	fib
sw	$v0,	16($sp)
lw	$t1,	8($sp)
lw	$t2,	16($sp)
addu	$t0,	$t1,	$t2
sw	$t0,	24($sp)
lw	$v0,	24($sp)
lw	$ra,	0($sp)
addi	$sp,	$sp,	28
jr	$ra
f:
sw	$ra,	0($sp)
lw	$t0,	4($sp)
li	$t1,	0
bne	$t0,	$t1,	else_2
li	$v0,	1
lw	$ra,	0($sp)
addi	$sp,	$sp,	20
jr	$ra
else_2:
lw	$t1,	4($sp)
addi	$t0,	$t1,	-1
sw	$t0,	12($sp)
lw	$t0,	12($sp)
sw	$t0,	-16($sp)
addi	$sp,	$sp,	-20
jal	f
sw	$v0,	8($sp)
lw	$t1,	4($sp)
lw	$t2,	8($sp)
mult	$t1,	$t2
mflo	$t0
sw	$t0,	16($sp)
lw	$v0,	16($sp)
lw	$ra,	0($sp)
addi	$sp,	$sp,	20
jr	$ra
main:
sw	$ra,	0($sp)
li	$t0,	0
sw	$t0,	4($sp)
li	$t0,	0
sw	$t0,	-24($sp)
addi	$sp,	$sp,	-28
jal	fib
sw	$v0,	12($sp)
li	$t0,	4
sw	$t0,	-16($sp)
addi	$sp,	$sp,	-20
jal	f
sw	$v0,	16($sp)
lw	$t0,	12($sp)
sw	$t0,	-20($sp)
lw	$t0,	16($sp)
sw	$t0,	-16($sp)
addi	$sp,	$sp,	-24
jal	print
sw	$v0,	8($sp)
lw	$t1,	8($sp)
move	$t0,	$t1
sw	$t0,	4($sp)
li	$t0,	1
li	$t1,	1
ble	$t0,	$t1,	else_3
lw	$ra,	0($sp)
addi	$sp,	$sp,	20
jr	$ra
lw	$ra,	0($sp)
addi	$sp,	$sp,	20
jr	$ra
j	else_end_3
else_3:
la	$a0,	string0
li	$v0,	4
syscall
lw	$a0,	4($sp)
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
lw	$ra,	0($sp)
addi	$sp,	$sp,	20
jr	$ra
else_end_3:
PROGRAM_END:
