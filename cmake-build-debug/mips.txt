.data
stringEnter:	.asciiz	"\n"
string0:	.asciiz	"18231210"
string1:	.asciiz	"finish"
.text
#global:
addi	$sp,	$sp,	-60
jal	main
j	PROGRAM_END
main:
sw	$ra,	0($sp)
li	$t0,	1
sw	$t0,	4($sp)
li	$t0,	2
sw	$t0,	8($sp)
li	$t0,	3
sw	$t0,	12($sp)
li	$t0,	4
sw	$t0,	16($sp)
li	$t0,	5
sw	$t0,	20($sp)
li	$t0,	6
sw	$t0,	24($sp)
li	$t0,	7
sw	$t0,	28($sp)
li	$t0,	8
sw	$t0,	32($sp)
li	$t1,	0
sll	$t1,	$t1,	2
li	$t2,	0
sll	$t2,	$t2,	2
li	$t0,	4
mult	$t0	$t2
mflo	$t2
addu	$t1,	$t1,	$t2
addi	$t1,	$t1,	4
addu	$t1,	$t1,	$sp
lw	$t0,	0($t1)
sw	$t0,	44($sp)
lw	$t0,	44($sp)
li	$t1,	1
bne	$t0,	$t1,	else_0
la	$a0,	string0
li	$v0,	4
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
else_0:
li	$t0,	0
sw	$t0,	36($sp)
for_0:
lw	$t0,	36($sp)
li	$t1,	2
bge	$t0,	$t1,	for_end_0
li	$t0,	0
sw	$t0,	40($sp)
for_1:
lw	$t0,	40($sp)
li	$t1,	4
bge	$t0,	$t1,	for_end_1
lw	$t1,	40($sp)
sll	$t1,	$t1,	2
lw	$t2,	36($sp)
sll	$t2,	$t2,	2
li	$t0,	4
mult	$t0	$t2
mflo	$t2
addu	$t1,	$t1,	$t2
addi	$t1,	$t1,	4
addu	$t1,	$t1,	$sp
lw	$t0,	0($t1)
sw	$t0,	48($sp)
lw	$t0,	48($sp)
li	$t1,	1
bne	$t0,	$t1,	switch_0_case_1
li	$a0,	1
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
j	switch_end_0
switch_0_case_1:
lw	$t0,	48($sp)
li	$t1,	2
bne	$t0,	$t1,	switch_0_case_2
li	$a0,	2
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
j	switch_end_0
switch_0_case_2:
lw	$t0,	48($sp)
li	$t1,	3
bne	$t0,	$t1,	switch_0_case_3
li	$a0,	3
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
j	switch_end_0
switch_0_case_3:
lw	$t0,	48($sp)
li	$t1,	4
bne	$t0,	$t1,	switch_0_case_4
li	$a0,	4
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
j	switch_end_0
switch_0_case_4:
lw	$t0,	48($sp)
li	$t1,	5
bne	$t0,	$t1,	switch_0_case_5
li	$a0,	5
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
j	switch_end_0
switch_0_case_5:
lw	$t0,	48($sp)
li	$t1,	6
bne	$t0,	$t1,	switch_0_case_6
li	$a0,	6
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
j	switch_end_0
switch_0_case_6:
lw	$t0,	48($sp)
li	$t1,	7
bne	$t0,	$t1,	switch_0_case_7
li	$a0,	7
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
j	switch_end_0
switch_0_case_7:
li	$a0,	8
li	$v0,	1
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
switch_end_0:
lw	$t1,	40($sp)
addi	$t0,	$t1,	1
sw	$t0,	40($sp)
j	for_1
for_end_1:
lw	$t1,	36($sp)
addi	$t0,	$t1,	1
sw	$t0,	36($sp)
j	for_0
for_end_0:
li	$t1,	0
sll	$t1,	$t1,	2
li	$t2,	0
sll	$t2,	$t2,	2
li	$t0,	4
mult	$t0	$t2
mflo	$t2
addu	$t1,	$t1,	$t2
addi	$t1,	$t1,	4
addu	$t1,	$t1,	$sp
lw	$t0,	0($t1)
sw	$t0,	52($sp)
lw	$t0,	52($sp)
li	$t1,	1
bne	$t0,	$t1,	switch_1_case_1
li	$t1,	0
sll	$t1,	$t1,	2
li	$t2,	0
sll	$t2,	$t2,	2
li	$t0,	4
mult	$t0	$t2
mflo	$t2
addu	$t1,	$t1,	$t2
addi	$t1,	$t1,	4
addu	$t1,	$t1,	$sp
li	$t0,	0
sw	$t0,	0($t1)
j	switch_end_1
switch_1_case_1:
li	$t1,	0
sll	$t1,	$t1,	2
li	$t2,	0
sll	$t2,	$t2,	2
li	$t0,	4
mult	$t0	$t2
mflo	$t2
addu	$t1,	$t1,	$t2
addi	$t1,	$t1,	4
addu	$t1,	$t1,	$sp
li	$t0,	1
sw	$t0,	0($t1)
switch_end_1:
li	$t1,	0
sll	$t1,	$t1,	2
li	$t2,	0
sll	$t2,	$t2,	2
li	$t0,	4
mult	$t0	$t2
mflo	$t2
addu	$t1,	$t1,	$t2
addi	$t1,	$t1,	4
addu	$t1,	$t1,	$sp
lw	$t0,	0($t1)
sw	$t0,	56($sp)
lw	$t0,	56($sp)
li	$t1,	2
beq	$t0,	$t1,	else_1
la	$a0,	string1
li	$v0,	4
syscall
la	$a0,	stringEnter
li	$v0,	4
syscall
else_1:
PROGRAM_END:
